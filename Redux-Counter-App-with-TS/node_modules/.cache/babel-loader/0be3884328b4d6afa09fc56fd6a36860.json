{"ast":null,"code":"var _jsxFileName = \"/Users/darioherrera/Desktop/redux-app/src/container/ReduxApp.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Buttons } from '../components/Buttons';\nimport { ShowResult } from '../components/ShowResult';\nimport { increment, decrement, reset } from '../redux/actionCreator';\nimport { connect } from 'react-redux';\nimport { useReduxAppState } from './useReduxAppState';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ReduxApp = props => {\n  _s();\n\n  const {\n    numberCounterApp,\n    actions\n  } = useReduxAppState(props);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'container text-center',\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Redux App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ShowResult, {\n      counterNumber: numberCounterApp\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Buttons, {\n      incrementAction: actions.handleIncrement,\n      decrementAction: actions.handleDecrement,\n      resetAction: actions.handleRest\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ReduxApp, \"V4bJTaBiSSpCM8ONFCWSZRWFF+E=\", false, function () {\n  return [useReduxAppState];\n});\n\n_c = ReduxApp;\nexport const mapStateToProps = state => ({\n  counterNumber: state.numberCounter\n});\nexport const mapDispatchToProps = dispatch => ({\n  increment: payload => dispatch(increment(payload)),\n  decrement: payload => dispatch(decrement(payload)),\n  reset: payload => dispatch(reset(payload))\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(ReduxApp);\n\nvar _c;\n\n$RefreshReg$(_c, \"ReduxApp\");","map":{"version":3,"sources":["/Users/darioherrera/Desktop/redux-app/src/container/ReduxApp.tsx"],"names":["React","Buttons","ShowResult","increment","decrement","reset","connect","useReduxAppState","ReduxApp","props","numberCounterApp","actions","handleIncrement","handleDecrement","handleRest","mapStateToProps","state","counterNumber","numberCounter","mapDispatchToProps","dispatch","payload"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,SAASC,OAAT,QAAwB,uBAAxB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAGEC,SAHF,EAIEC,SAJF,EAKEC,KALF,QAMO,wBANP;AAOA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,oBAAjC;;AAcA,OAAO,MAAMC,QAAiC,GAAIC,KAAD,IAA0B;AAAA;;AACzE,QAAM;AAAEC,IAAAA,gBAAF;AAAoBC,IAAAA;AAApB,MAAgCJ,gBAAgB,CAACE,KAAD,CAAtD;AAEA,sBACE;AAAK,IAAA,SAAS,EAAE,uBAAhB;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,UAAD;AAAY,MAAA,aAAa,EAAEC;AAA3B;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,QAAC,OAAD;AACE,MAAA,eAAe,EAAEC,OAAO,CAACC,eAD3B;AAEE,MAAA,eAAe,EAAED,OAAO,CAACE,eAF3B;AAGE,MAAA,WAAW,EAAEF,OAAO,CAACG;AAHvB;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAhBM;;GAAMN,Q;UAC2BD,gB;;;KAD3BC,Q;AAkBb,OAAO,MAAMO,eAA+D,GAC1EC,KAD6E,KAEnD;AAC1BC,EAAAA,aAAa,EAAED,KAAK,CAACE;AADK,CAFmD,CAAxE;AAMP,OAAO,MAAMC,kBAEe,GAC1BC,QAD6B,KAEA;AAC7BjB,EAAAA,SAAS,EAAGkB,OAAD,IAAqCD,QAAQ,CAACjB,SAAS,CAACkB,OAAD,CAAV,CAD3B;AAE7BjB,EAAAA,SAAS,EAAGiB,OAAD,IAAqCD,QAAQ,CAAChB,SAAS,CAACiB,OAAD,CAAV,CAF3B;AAG7BhB,EAAAA,KAAK,EAAGgB,OAAD,IAAqCD,QAAQ,CAACf,KAAK,CAACgB,OAAD,CAAN;AAHvB,CAFA,CAFxB;AAUP,eAAef,OAAO,CAACS,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CX,QAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { Dispatch } from 'redux';\nimport { Buttons } from '../components/Buttons';\nimport { ShowResult } from '../components/ShowResult';\nimport {\n  ICounterAction,\n  ICounterState,\n  increment,\n  decrement,\n  reset,\n} from '../redux/actionCreator';\nimport { connect } from 'react-redux';\nimport { useReduxAppState } from './useReduxAppState';\n\nexport interface ReduxAppStateToProps {\n  counterNumber: number;\n}\n\nexport interface ReduxAppFunctionToProps {\n  increment: (payload: number) => void;\n  reset: (payload: number) => void;\n  decrement: (payload: number) => void;\n}\n\nexport type ReduxAppProps = ReduxAppStateToProps & ReduxAppFunctionToProps;\n\nexport const ReduxApp: React.FC<ReduxAppProps> = (props: ReduxAppProps) => {\n  const { numberCounterApp, actions } = useReduxAppState(props);\n\n  return (\n    <div className={'container text-center'}>\n      <h1>Redux App</h1>\n      <hr />\n      <ShowResult counterNumber={numberCounterApp} />\n      <hr />\n      <Buttons\n        incrementAction={actions.handleIncrement}\n        decrementAction={actions.handleDecrement}\n        resetAction={actions.handleRest}\n      />\n    </div>\n  );\n};\n\nexport const mapStateToProps: (state: ICounterState) => ReduxAppStateToProps = (\n  state: ICounterState\n): ReduxAppStateToProps => ({\n  counterNumber: state.numberCounter,\n});\n\nexport const mapDispatchToProps: (\n  dispatch: Dispatch\n) => ReduxAppFunctionToProps = (\n  dispatch: ThunkDispatch<ICounterState, null, ICounterAction>\n): ReduxAppFunctionToProps => ({\n  increment: (payload: number): ICounterAction => dispatch(increment(payload)),\n  decrement: (payload: number): ICounterAction => dispatch(decrement(payload)),\n  reset: (payload: number): ICounterAction => dispatch(reset(payload)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ReduxApp);\n"]},"metadata":{},"sourceType":"module"}